# -*- org -*-

* 0.14 (Q2 2024) (Works again, Logging, Testing, CI)

** rc/mk
TODO Resume work and make it work again! Can build itself.

TODO Can use rc/mk on principia and build and syncweb as well Editor.nw
     (efuns), Codemap.nw

** internals
TODO Renamed module to capitalized form (Common.ml), like in Semgrep
     (thx Martin)

Logging using poor's man Logs.ml

TODO Testing library using Testo? (only built and run on 4.14.0)

TODO Switch from Common.filename to (our poor's man) Fpath.t

** devops

TODO started to use Nix to define the development environment for Xix.

TODO? switch to precommit and ocamlformat?

TODO more semgrep rules (forbid functors, labels, etc.)

TODO compile again for ocaml light (my own fork of caml-special-light 1.07)

* 0.13 (Q1 2024) (CI build and test and semgrep checks (devops))
# resume after long hiatus (2019-2023) due to our move to Italy,
# the birth of Nathalie, and especially my work for Semgrep.

** internals
Started to use stdcompat for backward compatibility with
old versions of OCaml.

** devops
Github actions (GHA) checks to make sure xix compiles.
At least it compiles with 3.10.0 (thx to stdcompat), 4.04.0, 4.14.0,
and even 5.1.0!

First semgrep checks in semgrep.jsonnet :) and semgrep GHA workflow.

Some basic tests (also enforced in GHA) in test.sh

* -----------------------------------------------------------

* Big pause to work on semgrep for 2019/2020/2021/2022/2023

* -----------------------------------------------------------


* 0.12 (Q4 2018) ()
# Move to Italy

* 0.11 (Q3 2018) (lib_gui?)

internals: use of merlin (mk .merlin) via Efuns

* 0.10 (Q2 2018) ()

* 0.9 (Q1 2018) ()
# GioGio at home a lot, big ear infections

(work on syncweb -web_to_tex and code indexing)

* -----------------------------------------------------------

* 0.8 (Q4 2017) (git algorithms)

diff3.ml
simpler diff_myers.ml

* 0.7 (Q3 2017) (git)

port of dulwich and ocaml-git, 2 clones of git, to ocaml(light).

Simplify code in ocaml-git by not using functors/lwt/mstruct/... 
and complete with new code derived from dulwich (clone of git in python)
or from entirely new code for the features not implemented by dulwich.


* 0.6 (Q2 2017) (rio and libdraw, import lib_core, lib_system)

port of rio using ocaml threads but relying on the original plan9 kernel.
basic terminal emulator.

port of libdraw, the userspace part, again relying on the original plan9 kernel
(draw/, geometry/, input/, and basic ui/ for menus)

binding to plan9 mount/bind and port of 9P protocol to ocaml (for rio)
(lib_system/)

import stdlib and organize better lib_core/ (collections/, string/, etc).

port more of the kernel C code to ocaml 
(core DS, concurrency, memory, process, interrupts, virtual memory,
scheduling, and timing chapters).

started lib_core/ 

* 0.5 (Q1 2017) (kernel start)
# Giogio birth!

minimal C kernel for Raspberry Pi (boot, malloc, libc, print) by
 selecting subset of 9/bcm/ and 9/port in plan9

minimal ocaml hello world linked in kernel
 by linking the byterun interpreter from ocaml light 1.07 to the
 minimal C kernel (incorporate more libc)

* -----------------------------------------------------------

* 0.4 (Q4 2016) (5c typechecker and basic code generator)

finish cpp
finish first port of 5c (typechecker and basic code generator)

* 0.3 (Q3 2016) (mk, rc, 5c parser, cpp)

port of mk
port of rc
port of 5c (just parser and dumper)
port of cpp

* 0.2 (Q2 2016) ()

* 0.1 (Q1 2016) (5l)

start of repository, mkfiles, skeleton

port of 5l
finish 5a

* -----------------------------------------------------------

* Alpha (Dec 2015) (5a + lex/yacc import)

port of 5a
import of yacc that I ported in may 2015
import of lex from OCaml.
import of lib_parsing/ from the modifications I made to lex and yacc.
