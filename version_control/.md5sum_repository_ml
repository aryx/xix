version_control/repository.ml |75ac0d711c1dc91120325802d95e4a53
copyright ocamlgit |2e637e0f4a0397dae3b16ce123f2f846
type [[Repository.t]] |3fbcf224a41ef801b8ac7391408589da
[[Repository.t]] index field |51dc5a5f046db7ce27c74ade3c8ea2f4
constant [[Repository.SlashOperator]] |2d07fa9e64f50303adab0d0bb9642840
constant [[Repository.dirperm]] |840ef12780536558769026d95a8f8b01
type [[Repository.objectish]] |d6cc9a92ef634eb93d4726d44456220c
[[Repository.objectish]] cases |1b3cbfff6e92c7c4a882fddcbfb3e08c
[[Repository.objectish]] cases |0a4354955c579a118ce5c11394d8f8c1
function [[Repository.hexsha_to_filename]] |c06d21125203e346e53fac971f2889f5
function [[Repository.ref_to_filename]] |391207f59565a10aec195f62e1240ccd
function [[Repository.index_to_filename]] |9faaacdd38a7294f9cc3e474e5444db3
function [[Repository.with_file_out_with_lock]] |973924a39d4d9ac7e3bd1ad6f96c5ba7
function [[Repository.with_opendir]] |042a842c46b5381d7422f291330cf2a1
function [[Repository.walk_dir]] |914ced1ab37199df92ca147d03a4142c
function [[Repository.read_ref]] |c816b4b2472d4b71d9c981c6306000fd
function [[Repository.follow_ref]] |d94612e3b657727507291435f4513cc8
function [[Repository.follow_ref_some]] |754dee4e1447321e9b22d9b839f6901e
function [[Repository.add_ref_if_new]] |5b31d1e3f2091337a2da89d5f3edaecc
function [[Repository.del_ref]] |c3abdd870d5235cf7967b8aab29c524a
function [[Repository.set_ref_if_same_old]] |0ab694251312bed80ec24201009e1354
function [[Repository.set_ref]] |22748db611158d74ddfd376119374c14
function [[Repository.write_ref]] |85437ab2f9aefffa9b9e8dc8e2e0ac8d
function [[Repository.all_refs]] |8182c5aaeb0652c9e4c5c3508f2dfc6a
function [[Repository.read_obj]] |23bf6bd95894b409b469fa9ca8696511
function [[Repository.read_commit]] |4416d7d2662a4ad1be8c88e97115fdb8
function [[Repository.read_tree]] |f608d931c830e8035eb6b4d2b9933b4d
function [[Repository.read_blob]] |7f25670ea8a11ffabf1850d684f6f66a
function [[Repository.read_objectish]] |d8761efa20a8491a3aabb6da8732a56d
function [[Repository.add_obj]] |6eb53cff9926d859555d3d05d4d50028
[[Repository.add_obj()]] create directory if it does not exist |6ff3a257d6ca513f420be4f18006b275
function [[Repository.has_obj]] |f5c9630faa71b6b978f8c35989cc28b8
function [[Repository.read_index]] |90987fe932a07dfdb9f6de5022d77ccb
function [[Repository.write_index]] |4bd7a2da38d48627068863868bda217d
function [[Repository.content_from_path_and_unix_stat]] |cda79c28f0fa7ef1edb1c3292c8f5376
[[Repository.content_from_path_and_unix_stat()]] match kind cases |8d45ad291807c97d6695f9feb1b38ac5
function [[Repository.add_in_index]] |ef557e35458205563a8070d7cf4b71ce
[[Repository.add_in_index()]] sanity check [[relpaths]] |0a22be2845bb9c719c3edf5e0deb9a43
[[Repository.add_in_index()]] adding [[relpath]] |097b94c7398c0f1f583172db24977a93
function [[Repository.commit_index]] |1f7e6924e8cf1504e26318c1488a3bbd
[[Repository.commit_index()]] read merge message if needed |6a91555934650f1571aa5a62c53ae928
[[Repository.commit_index()]] add ref when first commit |99c1a9e1941f3741cec66ee0e18ac602
[[Repository.commit_index()]] set [[merge_heads]] |28c7bdd17812f7c10d6effbbf3967b2b
[[Repository.commit_index()]] update ref when not first commit |f0ea4ad7e12a00854c36b6f25b4a58e5
function [[Repository.build_file_from_blob]] |5250ca737cda4ff72fc96e09e8bdacc2
[[Repository.build_file_from_blob()]] match perm cases |6a387fd3a976c3c02de1848686a3fd66
function [[Repository.set_worktree_and_index_to_tree]] |3f93c14b72211e9a1c3516696a6a91fa
[[Repository.set_worktree_and_index_to_tree()]] walk tree cases |6a387fd3a976c3c02de1848686a3fd66
function [[Repository.init]] |aed5d3a59c5df34f986891018af1d2a3
[[Repository.init()]] create [[.git/HEAD]] |1eca498cbec6e46827bb09dc66b26cad
function [[Repository.open_]] |4a799db147ac4d9f059182d3ba5d2030
[[Repository.open_()]] other fields settings |b3ec72cc01e407a0a919c9b63668f8fd
[[Repository.open_()]] other fields settings |349a0685b522ab79cb8b8381d9fc8db8
function [[Repository.find_dotgit_root_and_open]] |6559d1a2fbf651e079c5de967e9a611d